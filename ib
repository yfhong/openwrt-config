#!/bin/bash
set -e

# profiles and targets
mw4530r='mercury_mw4530r-v1 ath79/generic'
glb1300='glinet_gl-b1300 ipq40xx/generic'
# wired router
x86_64='x86/64'
x86='x86/generic'
# travel router
dir505='dlink_dir-505 ath79/generic'

# packages
wireless_basic='iwinfo wpa-cli iw -iw-full'
wireless='iwinfo wpa-cli -iw iw-full'

wpad_basic='wpad-basic-wolfssl -wpad-mini -wpad-basic -wpad-wolfssl'
wpad='-wpad-basic-wolfssl -wpad-mini -wpad-basic wpad-wolfssl'
mesh='-wpad-basic-wolfssl -wpad-mini -wpad-basic wpad-mesh-wolfssl'

no_wireless='-iwinfo -wpa-cli -iw -iw-full -wpad-basic-wolfssl -wpad-mini -wpad-basic -wpad-wolfssl -wpad -wpad-mesh-wolfssl'

no_ppp='-ppp -ppp-mode-pppoe'
no_ipv6='-ip6tables -odhcp6c -kmod-ipv6 -kmod-ip6tables -odhcpd-ipv6only'

common="miniupnpd ipset ip-full -ip-tiny dnsmasq-full -dnsmasq ip-bridge $wireless"
common_tiny="miniupnpd ipset ip-full -ip-tiny dnsmasq-full -dnsmasq $wireless_basic $no_ppp $no_ipv6"
common_wired="miniupnpd ipset ip-full -ip-tiny dnsmasq-full -dnsmasq ip-bridge $no_wireless"

utils='diffutils adblock curl ca-bundle netcat tcpdump iputils-arping arp-scan'
sa="watchcat nlbwmon $utils"
mactelnet='mac-telnet-client mac-telnet-discover'
security='nmap-ssl'
sa_adv="$sa $mactelnet $security"

ddns='ca-bundle ddns-scripts'

shadowsocks='shadowsocks-libev-ss-rules stubby'
gfw="$shadowsocks"

vpn='wireguard-tools'

routing='bird2 bird2c'

# web interface
hass='rpcd uhttpd-mod-ubus uhttpd'
luci2='luci2-ui-base'
luci='luci luci-theme-material'
luci_zh='luci-i18n-base-zh-cn'

# profiles
profiles=(mw4530r_basic mw4530r_main dir505_main x86_main x86_64_main)
mw4530r_basic="$mw4530r $common_tiny $sa $ddns $gfw $vpn $wpad_basic"
mw4530r_main="$mw4530r $common $sa $ddns $gfw $vpn $wpad"
glb1300_main="$glb1300 $common $sa $ddns $gfw $vpn $wpad"
# wired router.
x86_main="$x86 $common_wired $sa_adv $ddns $gfw $vpn"
x86_64_main="$x86_64 $common_wired $sa_adv $ddns $gfw $vpn"
# travel router dir-505. dhcp wan + private wifi + vpn to office + gfw
dir505_main="$dir505 $common_tiny curl ca-bundle netcat tcpdump $gfw $vpn $wpad_basic"

build() {
    device="$1"
    shift
    profile="$1"
    shift
    target="$1"
    shift
    packages="$@"
    echo "PROFILE=$profile TARGET=$target PACKAGES=\"$packages\" EXTRA_IMAGE_NAME="$device" REPOS=\"$REPOS\""
    if [ "$GEN_ONLY" != 'yes' ]
    then
        PROFILE="$profile" TARGET="$target" PACKAGES="$packages" EXTRA_IMAGE_NAME="$device" REPOS="$REPOS" ./meta image
    fi
}

hr() {
    echo '------------------------------------------------------------'
}

while getopts "g" option
do
    case "$option" in
        g) GEN_ONLY="yes" ;;
        *) ;;
    esac
done
shift "$((OPTIND-1))"

devices="$@"
if [ -z "$devices" ]
then
    for i in "${!profiles[@]}"
    do
        printf "%s %s\n" "[$((i+1))]" "${profiles[$i]}"
    done
    echo -en "\ndevices:\033[1A\radd: "
    while read -r i
    do
        if [ "$i" = '' ]
        then
            if [ -z "$devices" ]
            then
                devices="${profiles[0]}"
                echo -e "devices: ${devices}\033[1A\033[2K\radd: "
            fi
            break
        fi
        devices="${profiles[$((i-1))]} $devices"
        echo -en "devices: ${devices}\033[1A\033[2K\radd: "
    done
    echo
fi

for device in $devices
do
    modules="${!device}"
    if [ -z "$modules" ]
    then
        echo "No device found: $device"
        exit 1
    fi

    hr

    echo "Build: $device"
    build "$device" $modules
done
